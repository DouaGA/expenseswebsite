"""
Django settings for expenseswebsite project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()  # Charge les variables depuis .env

SECRET_KEY = os.getenv('SECRET_KEY')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
if os.name == 'nt':
    # Option 1: Chemins Conda (prioritaire)
    conda_gdal_path = r'C:\Users\ASUS\miniconda3\envs\gis_env\Library\bin\gdal304.dll'
    conda_geos_path = r'C:\Users\ASUS\miniconda3\envs\gis_env\Library\bin\geos_c.dll'

    # Option 2: Chemins OSGeo4W (fallback)
    osgeo_gdal_path = r'C:\OSGeo4W\bin\gdal304.dll'
    osgeo_geos_path = r'C:\OSGeo4W\bin\geos_c.dll'

    # Configuration automatique
    if Path(conda_gdal_path).exists():
        GDAL_LIBRARY_PATH = conda_gdal_path
        GEOS_LIBRARY_PATH = conda_geos_path
        os.environ['PATH'] = f"{os.path.dirname(conda_gdal_path)};{os.environ['PATH']}"
    elif Path(osgeo_gdal_path).exists():
        GDAL_LIBRARY_PATH = osgeo_gdal_path
        GEOS_LIBRARY_PATH = osgeo_geos_path
        os.environ['PATH'] = f"C:\\OSGeo4W\\bin;{os.environ['PATH']}"  # Ou utilisez une raw string
    else:
        GDAL_LIBRARY_PATH = None
        GEOS_LIBRARY_PATH = None



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core.apps.CoreConfig',
    'crispy_forms',
    'leaflet',
    'crispy_bootstrap5',
    'django.contrib.gis',


]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
ROOT_URLCONF = 'expenseswebsite.urls'
LOGOUT_REDIRECT_URL = 'home'

LOGIN_URL = 'login'

from django.conf import settings
json_path = settings.BASE_DIR / 'templates' / 'core' / 'data' / 'zip-postcodes.json'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Ajoutez cette ligne
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'expenseswebsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'greenmap_db',
        'USER': os.getenv('USER'),
        'PASSWORD': os.getenv('PASSWORD'),  # Plus de mot de passe en clair
        'HOST': os.getenv('HOST'),
        'PORT': os.getenv('PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        'authentication': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATICFILES_DIRS=[os.path.join(BASE_DIR,"expenseswebsite/static")]
STATIC_ROOT=os.path.join(BASE_DIR,"static")
